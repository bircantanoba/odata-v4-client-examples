{"version":3,"sources":["inMemory.js","src/JayDataModules/inMemory.js"],"names":["interopDefine","define","amd","deps","callback","f","exports","module","g","window","global","self","this","$data","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_core","_core2","Array","prototype","toQueryable","firtsItem","type","Container","resolveType","getTypeName","isAssignableTo","Entity","Guard","raise","Exception","resolveName","requireType","typeName","name","isTypeRegistered","EntityContext","extend","Source","EntitySet","elementType","context","source","jaydata/core"],"mappings":";;;;;;;;;;;;;CAAA,WACA,GAAAA,IAEAA,EADA,kBAAAC,SAAA,kBAAAA,UAAAA,OAAAC,IACA,SAAAC,EAAAC,GACAA,KAEAH,SAEA,WAAA,YACA,SAAAI,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAJ,SAAAA,OAAAC,IAAAD,UAAAI,OAAA,CAAA,GAAAG,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,MAAAR,MAAA,WAAA,MAAA,SAAAS,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAd,GAAA,GAAAmB,OAAA,uBAAAL,EAAA,IAAA,MAAAd,GAAAoB,KAAA,mBAAApB,EAAA,GAAAqB,GAAAV,EAAAG,IAAAb,WAAAS,GAAAI,GAAA,GAAAQ,KAAAD,EAAApB,QAAA,SAAAQ,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAApB,QAAAQ,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAb,QAAA,IAAA,GAAAiB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAf,EAAAD,GAcA,YAUA,SAASwB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GARvFG,OAAOC,eAAe7B,EAAS,cAC3B8B,OAAO,GAGX,IAAIC,GAAQf,EAAQ,gBAEhBgB,EAASR,EAAuBO,IC7BpC,SAAWxB,GAEPA,EAAM0B,MAAMC,UAAUC,YAAc,WAChC,GAAI7B,KAAKgB,OAAS,EAAG,CACjB,GAAIc,GAAY9B,KAAK,GACjB+B,EAAON,EAAAO,UAAUC,YAAYR,EAAAO,UAAUE,YAAYJ,GAElDC,GAAKI,gBAAmBJ,EAAKI,eAAelC,EAAMmC,SACnDX,EAAAY,MAAMC,MAAM,GAAAb,GAAAc,UAAc,SAAWd,EAAAO,UAAUQ,YAAYT,GAAQ,oCAAqC,gBAAiBA,GAE7H,KAAK,GAAIpB,GAAI,EAAGA,EAAIX,KAAKgB,OAAQL,IAC7Bc,EAAAY,MAAMI,YAAY,mBAAoBzC,KAAKW,GAAIoB,GAKvD,GAAIW,GAAW,iBAAmBX,EAAKY,IAClClB,GAAAO,UAAUY,iBAAiBF,IAC5BzC,EAAM4C,cAAcC,OAAOJ,GACvBK,QACIhB,KAAM9B,EAAM+C,UACZC,YAAalB,IAKzB,IAAImB,GAAUzB,EAAAO,UAAU,SAAWU,IAAYC,KAAM,WAAYQ,QAAUJ,OAAQ/C,OAEnF,OAAOkD,GAAQH,SA5BvBrB,EAAAA,YD+DAhC,EAAAA,WAAkBgC,EAAAA,WAClB/B,EAAOD,QAAUA,EAAQ,aAEtB0D,eAAe,sBAAsB,IAAI","file":"inMemory.min.js","sourcesContent":["﻿// JayData 1.5.1 CTP\r\n// Dual licensed under MIT and GPL v2\r\n// Copyright JayStack Technologies (http://jaydata.org/licensing)\r\n//\r\n// JayData is a standards-based, cross-platform Javascript library and a set of\r\n// practices to access and manipulate data from various online and offline sources.\r\n//\r\n// Credits:\r\n//     Hajnalka Battancs, Dániel József, János Roden, László Horváth, Péter Nochta\r\n//     Péter Zentai, Róbert Bónay, Szabolcs Czinege, Viktor Borza, Viktor Lázár,\r\n//     Zoltán Gyebrovszki, Gábor Dolla\r\n//\r\n// More info: http://jaydata.org\r\n(function(){\r\n\tvar interopDefine;\r\n\tif (typeof define != 'function' || (typeof define == 'function' && !define.amd)){\r\n\t\tinteropDefine = function(deps, callback){\r\n\t\t\tcallback();\r\n\t\t};\r\n\t}else interopDefine = define;\r\n\r\n\tinteropDefine(['jaydata'], function(){\r\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.$data = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _core = require(\"jaydata/core\");\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function ($data) {\n\n    $data.Array.prototype.toQueryable = function () {\n        if (this.length > 0) {\n            var firtsItem = this[0];\n            var type = _core.Container.resolveType(_core.Container.getTypeName(firtsItem));\n\n            if (!type.isAssignableTo || !type.isAssignableTo($data.Entity)) _core.Guard.raise(new _core.Exception(\"Type '\" + _core.Container.resolveName(type) + \"' is not subclass of $data.Entity\", \"Not supported\", type));\n\n            for (var i = 0; i < this.length; i++) {\n                _core.Guard.requireType('array item check', this[i], type);\n            }\n        }\n\n        var typeName = 'inMemoryArray_' + type.name;\n        if (!_core.Container.isTypeRegistered(typeName)) {\n            $data.EntityContext.extend(typeName, {\n                Source: {\n                    type: $data.EntitySet,\n                    elementType: type\n                }\n            });\n        }\n\n        var context = _core.Container['create' + typeName]({ name: 'InMemory', source: { Source: this } });\n\n        return context.Source;\n    };\n})(_core2.default);\n\nexports.default = _core2.default;\nmodule.exports = exports['default'];\n\n},{\"jaydata/core\":\"jaydata/core\"}]},{},[1])(1)\n});\n\n\t});\r\n})();\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n(function ($data) {\r\n\r\n    $data.Array.prototype.toQueryable = function () {\r\n        if (this.length > 0) {\r\n            var firtsItem = this[0];\r\n            var type = Container.resolveType(Container.getTypeName(firtsItem));\r\n\r\n            if (!type.isAssignableTo || !type.isAssignableTo($data.Entity))\r\n                Guard.raise(new Exception(\"Type '\" + Container.resolveName(type) + \"' is not subclass of $data.Entity\", \"Not supported\", type));\r\n\r\n            for (var i = 0; i < this.length; i++) {\r\n                Guard.requireType('array item check', this[i], type);\r\n            }\r\n\r\n        }\r\n\r\n        var typeName = 'inMemoryArray_' + type.name;\r\n        if (!Container.isTypeRegistered(typeName)) {\r\n            $data.EntityContext.extend(typeName, {\r\n                Source: {\r\n                    type: $data.EntitySet,\r\n                    elementType: type\r\n                }\r\n            });\r\n        }\r\n\r\n        var context = Container['create' + typeName]({ name: 'InMemory', source: { Source: this} });\r\n\r\n        return context.Source;\r\n    }\r\n\r\n})($data);\r\n\r\nexport default $data\r\n"],"sourceRoot":"/source/"}