{"version":3,"sources":["sencha.js","src/JayDataModules/src/JayDataModules/sencha.js"],"names":["interopDefine","define","amd","deps","callback","f","exports","module","g","window","global","self","this","$data","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_typeof","Symbol","iterator","constructor","_core","_core2","_Ext","_Ext2","Ext","Entity","buildExtFields","type","config","isAssignableTo","fields","memberDefinitions","getPublicMappedProperties","map","memDef","name","Array","forEach","fieldConfig","fieldIndex","indexOf","push","extend","alias","alternateClassName","queryable","doRequest","operation","scope","me","request","buildRequest","processResponse","getAction","doRead","params","applyIf","getParams","getExtraParams","create","action","records","getRecords","proxy","setRequest","buildQueryable","getQueryable","toArray","success","response","error","filters","getFilters","filter","hasOwnProperty","getFilterFn","getScope","getProperty","getValue","sorters","getSorters","sorter","direction","getDirection","orderBy","orderByDescending","getSorterFn","pageNum","getPage","pageLimit","getLimit","skip","take","jaydata/core"],"mappings":"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","file":"sencha.min.js","sourcesContent":["﻿// JayData 1.5.1 CTP\r\n// Dual licensed under MIT and GPL v2\r\n// Copyright JayStack Technologies (http://jaydata.org/licensing)\r\n//\r\n// JayData is a standards-based, cross-platform Javascript library and a set of\r\n// practices to access and manipulate data from various online and offline sources.\r\n//\r\n// Credits:\r\n//     Hajnalka Battancs, Dániel József, János Roden, László Horváth, Péter Nochta\r\n//     Péter Zentai, Róbert Bónay, Szabolcs Czinege, Viktor Borza, Viktor Lázár,\r\n//     Zoltán Gyebrovszki, Gábor Dolla\r\n//\r\n// More info: http://jaydata.org\r\n(function(){\r\n\tvar interopDefine;\r\n\tif (typeof define != 'function' || (typeof define == 'function' && !define.amd)){\r\n\t\tinteropDefine = function(deps, callback){\r\n\t\t\tcallback();\r\n\t\t};\r\n\t}else interopDefine = define;\r\n\r\n\tinteropDefine(['jaydata'], function(){\r\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.$data = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _core = require('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _Ext = (typeof window !== \"undefined\" ? window['Ext'] : typeof global !== \"undefined\" ? global['Ext'] : null);\n\nvar _Ext2 = _interopRequireDefault(_Ext);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function ($data, Ext) {\n\n    $data.Entity.buildExtFields = function (type, config) {\n        if (!type.isAssignableTo) return [];\n\n        var fields = type.memberDefinitions.getPublicMappedProperties().map(function (memDef) {\n            return memDef.name;\n        });\n\n        if (config instanceof $data.Array) {\n            config.forEach(function (fieldConfig) {\n                if ((typeof fieldConfig === 'undefined' ? 'undefined' : _typeof(fieldConfig)) === 'object' && fieldConfig.name) {\n                    var fieldIndex = fields.indexOf(fieldConfig.name);\n                    if (fieldIndex >= 0) {\n                        fields[fieldIndex] = fieldConfig;\n                    } else {\n                        fields.push(fieldConfig);\n                    }\n                }\n            });\n        }\n        return fields;\n    };\n\n    Ext.define('Ext.data.proxy.JayData', {\n        extend: 'Ext.data.proxy.Server',\n\n        alias: 'proxy.JayData',\n        alternateClassName: ['Ext.data.JayData'],\n\n        config: {\n            queryable: null\n        },\n\n        doRequest: function doRequest(operation, callback, scope) {\n            var me = this,\n                request = this.buildRequest(operation);\n\n            if (!me.config.queryable) me.processResponse(false, operation, request, null, callback, scope);\n\n            if (operation.getAction() == 'read') return me.doRead(request, operation, callback, scope);\n\n            return request;\n        },\n\n        buildRequest: function buildRequest(operation) {\n            var me = this,\n                params = Ext.applyIf(operation.getParams() || {}, me.getExtraParams() || {}),\n                request;\n\n            //copy any sorters, filters etc into the params so they can be sent over the wire\n            params = Ext.applyIf(params, me.getParams(operation));\n\n            request = Ext.create('Ext.data.Request', {\n                params: params,\n                action: operation.getAction(),\n                records: operation.getRecords(),\n                operation: operation,\n                proxy: me\n            });\n\n            operation.setRequest(request);\n\n            return request;\n        },\n\n        doRead: function doRead(request, operation, callback, scope) {\n            var me = this;\n            var queryable = me.buildQueryable(operation, me.getQueryable());\n\n            queryable.toArray({\n                success: function success(response) {\n                    me.processResponse(true, operation, request, response, callback, scope);\n                },\n                error: function error(response) {\n                    me.processResponse(false, operation, request, response, callback, scope);\n                }\n            });\n\n            return request;\n        },\n\n        buildQueryable: function buildQueryable(operation, queryable) {\n            if (!queryable) return queryable;\n\n            var filters = operation.getFilters();\n            if (filters) {\n                filters.forEach(function (filter) {\n                    if (filter.config.hasOwnProperty('scope')) queryable = queryable.filter(filter.getFilterFn(), filter.getScope());else if (filter.getProperty() && filter.getValue()) queryable = queryable.filter('it.' + filter.getProperty() + ' == this.value', { value: filter.getValue() });\n                });\n            }\n\n            var sorters = operation.getSorters();\n            if (sorters) {\n                sorters.forEach(function (sorter) {\n                    var direction = sorter.getDirection() === 'ASC' ? queryable.orderBy : queryable.orderByDescending;\n                    if (sorter.getSorterFn()) queryable = direction.call(queryable, sorter.getSorterFn());else queryable = direction.call(queryable, 'it.' + sorter.getProperty());\n                });\n            }\n\n            var pageNum = operation.getPage();\n            var pageLimit = operation.getLimit();\n            if (pageNum > 1) queryable = queryable.skip((pageNum - 1) * pageLimit);\n\n            queryable = queryable.take(pageLimit);\n\n            return queryable;\n        }\n\n    });\n})(_core2.default, _Ext2.default);\n\nexports.default = _core2.default;\nmodule.exports = exports['default'];\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"jaydata/core\":\"jaydata/core\"}]},{},[1])(1)\n});\n\n\t});\r\n})();\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\nimport Ext from 'Ext'\r\n\r\n(function ($data, Ext) {\r\n\r\n    $data.Entity.buildExtFields = function (type, config) {\r\n        if (!type.isAssignableTo)\r\n            return [];\r\n\r\n        var fields = type.memberDefinitions.getPublicMappedProperties().map(function (memDef) { return memDef.name; });\r\n\r\n        if (config instanceof $data.Array) {\r\n            config.forEach(function (fieldConfig) {\r\n                if (typeof fieldConfig === 'object' && fieldConfig.name) {\r\n                    var fieldIndex = fields.indexOf(fieldConfig.name);\r\n                    if (fieldIndex >= 0) {\r\n                        fields[fieldIndex] = fieldConfig;\r\n                    } else {\r\n                        fields.push(fieldConfig);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return fields;\r\n    }\r\n\r\n    Ext.define('Ext.data.proxy.JayData', {\r\n        extend: 'Ext.data.proxy.Server',\r\n\r\n        alias: 'proxy.JayData',\r\n        alternateClassName: ['Ext.data.JayData'],\r\n\r\n        config: {\r\n            queryable: null\r\n        },\r\n\r\n\r\n        doRequest: function (operation, callback, scope) {\r\n            var me = this,\r\n                request = this.buildRequest(operation);\r\n\r\n            if (!me.config.queryable)\r\n                me.processResponse(false, operation, request, null, callback, scope);\r\n\r\n            if (operation.getAction() == 'read')\r\n                return me.doRead(request, operation, callback, scope);\r\n\r\n            return request;\r\n        },\r\n\r\n        buildRequest: function (operation) {\r\n            var me = this,\r\n            params = Ext.applyIf(operation.getParams() || {}, me.getExtraParams() || {}),\r\n            request;\r\n\r\n            //copy any sorters, filters etc into the params so they can be sent over the wire\r\n            params = Ext.applyIf(params, me.getParams(operation));\r\n\r\n            request = Ext.create('Ext.data.Request', {\r\n                params: params,\r\n                action: operation.getAction(),\r\n                records: operation.getRecords(),\r\n                operation: operation,\r\n                proxy: me\r\n            });\r\n\r\n            operation.setRequest(request);\r\n\r\n            return request;\r\n        },\r\n\r\n        doRead: function (request, operation, callback, scope) {\r\n            var me = this;\r\n            var queryable = me.buildQueryable(operation, me.getQueryable());\r\n\r\n            queryable.toArray({\r\n                success: function (response) {\r\n                    me.processResponse(true, operation, request, response, callback, scope);\r\n                },\r\n                error: function (response) {\r\n                    me.processResponse(false, operation, request, response, callback, scope);\r\n                }\r\n            });\r\n\r\n            return request;\r\n        },\r\n\r\n        buildQueryable: function (operation, queryable) {\r\n            if (!queryable)\r\n                return queryable;\r\n\r\n            var filters = operation.getFilters();\r\n            if (filters) {\r\n                filters.forEach(function (filter) {\r\n                    if (filter.config.hasOwnProperty('scope'))\r\n                        queryable = queryable.filter(filter.getFilterFn(), filter.getScope());\r\n                    else if (filter.getProperty() && filter.getValue())\r\n                        queryable = queryable.filter('it.' + filter.getProperty() + ' == this.value', { value: filter.getValue() });\r\n                });\r\n            }\r\n\r\n            var sorters = operation.getSorters();\r\n            if (sorters) {\r\n                sorters.forEach(function (sorter) {\r\n                    var direction = sorter.getDirection() === 'ASC' ? queryable.orderBy : queryable.orderByDescending;\r\n                    if (sorter.getSorterFn())\r\n                        queryable = direction.call(queryable, sorter.getSorterFn());\r\n                    else\r\n                        queryable = direction.call(queryable, 'it.' + sorter.getProperty());\r\n\r\n                });\r\n            }\r\n\r\n            var pageNum = operation.getPage();\r\n            var pageLimit = operation.getLimit();\r\n            if (pageNum > 1)\r\n                queryable = queryable.skip((pageNum - 1) * pageLimit);\r\n\r\n            queryable = queryable.take(pageLimit);\r\n\r\n            return queryable;\r\n        }\r\n\r\n    });\r\n\r\n})($data, Ext);\r\n\r\nexport default $data\r\n"],"sourceRoot":"/source/"}